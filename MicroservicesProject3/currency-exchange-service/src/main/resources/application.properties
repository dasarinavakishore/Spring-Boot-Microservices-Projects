spring.application.name=currency-exchange
server.port=8000

spring.jpa.show-sql=true
spring.datasource.url=jdbc:h2:mem:testdb
spring.h2.console.enabled=true

eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka

spring.config.import=optional:configserver:http://localhost:8888
#spring.config.import=optional:configserver:


spring.jpa.defer-datasource-initialization=true


eureka.instance.appname=currency-exchange

eureka.instance.prefer-ip-address=true
eureka.instance.hostname=localhost


resilience4j.retry.instances.sample-api.maxRetryAttempts=5
resilience4j.retry.instances.sample-api.waitDuration=1s
#enableExponentialBackoff it will work as if api failed then waiting time increased exponentially 1s, 2s, 4s, 8s, 16s..etc
resilience4j.retry.instances.sample-api.enableExponentialBackoff=true

#resilience4j.circuitbreaker.instances.default.failureRateThreshold=90

resilience4j.ratelimiter.instances.default.limitForPeriod=2
resilience4j.ratelimiter.instances.default.limitRefreshPeriod=10s

resilience4j.bulkhead.instances.default.maxConsurrentCalls=10
resilience4j.bulkhead.instances.sample-api.maxConsurrentCalls=10

#for tracking the requests( not tracing all request due to performace so only probabily 1 tracing)
spring.sleuth.sampler.probability=1.0
